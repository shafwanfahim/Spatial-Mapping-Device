<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Lab7_ToF.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Lab7_ToF.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Tue Apr 11 15:33:21 2023
<BR><P>
<H3>Maximum Stack Usage =        328 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; VL53L1X_SensorInit &rArr; Status_Check &rArr; sprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[18]">ADC0SS0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC0SS0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC0SS0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[19]">ADC0SS1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1a]">ADC0SS2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1b]">ADC0SS3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[38]">ADC1SS0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[39]">ADC1SS1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3a]">ADC1SS2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3b]">ADC1SS3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[64]">AES0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[30]">CAN0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[31]">CAN1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[23]">COMP0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[24]">COMP1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[25]">COMP2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[65]">DES0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[32]">EMAC0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3c]">EPI0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[27]">FLASH_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[a]">GPIOA_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[b]">GPIOB_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[c]">GPIOC_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[d]">GPIOD_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[e]">GPIOE_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[28]">GPIOF_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[29]">GPIOG_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2a]">GPIOH_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3d]">GPIOJ_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3e]">GPIOK_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3f]">GPIOL_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[50]">GPIOM_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[51]">GPION_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[53]">GPIOP0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[54]">GPIOP1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[55]">GPIOP2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[56]">GPIOP3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[57]">GPIOP4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[58]">GPIOP5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[59]">GPIOP6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5a]">GPIOP7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5b]">GPIOQ0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5c]">GPIOQ1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5d]">GPIOQ2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5e]">GPIOQ3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5f]">GPIOQ4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[60]">GPIOQ5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[61]">GPIOQ6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[62]">GPIOQ7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[33]">HIBERNATE_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[12]">I2C0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2f]">I2C1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[47]">I2C2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[48]">I2C3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4e]">I2C4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4f]">I2C5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6a]">I2C6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6b]">I2C7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6c]">I2C8_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6d]">I2C9_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[14]">PWM0_0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[15]">PWM0_1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[16]">PWM0_2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[35]">PWM0_3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[13]">PWM0_FAULT_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[17]">QEI0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[63]">SHA0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[11]">SSI0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2c]">SSI1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[40]">SSI2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[41]">SSI3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[26]">SYSCTL_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4d]">SYSEXC_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6e]">SystemInit</a> from system_msp432e401y.o(.text.SystemInit) referenced from startup_msp432e401y_uvision.o(.text)
 <LI><a href="#[52]">TAMPER0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1d]">TIMER0A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1e]">TIMER0B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1f]">TIMER1A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[20]">TIMER1B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[21]">TIMER2A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[22]">TIMER2B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2d]">TIMER3A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2e]">TIMER3B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[49]">TIMER4A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4a]">TIMER4B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4b]">TIMER5A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[4c]">TIMER5B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[66]">TIMER6A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[67]">TIMER6B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[68]">TIMER7A_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[69]">TIMER7B_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[2b]">UART2_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[42]">UART3_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[43]">UART4_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[44]">UART5_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[45]">UART6_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[46]">UART7_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[37]">UDMAERR_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[36]">UDMA_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[34]">USB0_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[1c]">WATCHDOG_IRQHandler</a> from startup_msp432e401y_uvision.o(.text) referenced from startup_msp432e401y_uvision.o(RESET)
 <LI><a href="#[6f]">__main</a> from __main.o(!!!main) referenced from startup_msp432e401y_uvision.o(.text)
 <LI><a href="#[72]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[71]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[70]">_sputc</a> from _sputc.o(.text) referenced from sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6f]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[76]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[f8]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f9]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[77]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[fa]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[78]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[bb]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[7a]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[7c]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[7e]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[7f]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[80]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[fb]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[82]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[84]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[85]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[86]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[88]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[8a]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[8c]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[8d]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[8e]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[90]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[fc]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[92]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[94]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[96]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[98]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[fd]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[a4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[fe]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[ff]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[100]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[101]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[102]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[103]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[104]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[105]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000018))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[106]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[107]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[108]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[109]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[10a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[10b]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[10c]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[10d]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[10e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[110]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[111]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[112]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[113]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[114]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[115]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[116]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[117]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[118]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[119]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[75]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[11a]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[a1]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a3]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[11b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[a5]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; VL53L1X_SensorInit &rArr; Status_Check &rArr; sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[ca]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a8]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[11d]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[aa]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC0SS0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ADC0SS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC0SS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC0SS3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>ADC1SS0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC1SS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>ADC1SS2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>ADC1SS3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>AES0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>COMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>COMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DES0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EMAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPIOA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIOB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>GPIOC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>GPIOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GPIOE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPIOF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPIOH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>GPIOJ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>GPIOK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>GPIOL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>GPIOM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>GPION_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>GPIOP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>GPIOP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>GPIOP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>GPIOP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>GPIOP4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>GPIOP5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>GPIOP6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>GPIOP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>GPIOQ0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>GPIOQ1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPIOQ2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>GPIOQ3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIOQ4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>GPIOQ5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GPIOQ6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>GPIOQ7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>HIBERNATE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>I2C6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>I2C7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>I2C8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PWM0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PWM0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PWM0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PWM0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PWM0_FAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QEI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SHA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SSI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SSI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SSI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SYSCTL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SYSEXC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TAMPER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER0A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER0B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER1A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER1B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIMER2A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER2B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIMER3A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIMER3B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIMER4A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIMER4B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIMER5A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIMER5B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>TIMER6A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>TIMER6B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIMER7A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIMER7B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UDMAERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>UDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WATCHDOG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_msp432e401y_uvision.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ac]"></a>sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Check
</UL>

<P><STRONG><a name="[11e]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[b0]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[b1]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[b2]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[ae]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[83]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[79]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[ad]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>

<P><STRONG><a name="[70]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sprintf.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[8b]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[b8]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[87]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[8f]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[b9]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[89]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[91]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[7b]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[b4]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[b7]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[b3]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[c1]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[c4]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[c5]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[93]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[95]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[c6]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[97]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[99]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[c7]"></a>_c16rtomb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, _c16rtomb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[b6]"></a>_wcrtomb</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, _c16rtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[a2]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[c8]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_c16rtomb
</UL>

<P><STRONG><a name="[9d]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[c3]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[bd]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a7]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[121]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[122]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7em.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[ab]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[123]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>FlashAllLEDs</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, onboardleds.o(.text.FlashAllLEDs))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FlashAllLEDs &rArr; SysTick_Wait10ms &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onboardLEDs_Init
</UL>

<P><STRONG><a name="[f0]"></a>FlashI2CError</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, onboardleds.o(.text.FlashI2CError))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FlashI2CError
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2C
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex_nostop
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex
</UL>

<P><STRONG><a name="[ef]"></a>FlashI2CRx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, onboardleds.o(.text.FlashI2CRx))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
</UL>

<P><STRONG><a name="[f1]"></a>FlashI2CTx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, onboardleds.o(.text.FlashI2CTx))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2C
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex_nostop
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex
</UL>

<P><STRONG><a name="[cd]"></a>FlashLED3</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, onboardleds.o(.text.FlashLED3))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FlashLED3 &rArr; SysTick_Wait10ms &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>FlashLED4</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, onboardleds.o(.text.FlashLED4))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FlashLED4 &rArr; SysTick_Wait10ms &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e9]"></a>I2C_Init</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, 2dx_studio_8c.o(.text.I2C_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>PLL_Init</STRONG> (Thumb, 322 bytes, Stack size 8 bytes, pll.o(.text.PLL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PLL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>PortH_Init</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, 2dx_studio_8c.o(.text.PortH_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ec]"></a>PortM_Init</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, 2dx_studio_8c.o(.text.PortM_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>Status_Check</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, uart.o(.text.Status_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = Status_Check &rArr; sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[e7]"></a>SysTick_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, systick.o(.text.SysTick_Init))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>SysTick_Wait</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, systick.o(.text.SysTick_Wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WaitMs
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2C
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex_nostop
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait10ms
</UL>

<P><STRONG><a name="[cc]"></a>SysTick_Wait10ms</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, systick.o(.text.SysTick_Wait10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SysTick_Wait10ms &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spin_ccw
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spin
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashAllLEDs
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLED4
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLED3
</UL>

<P><STRONG><a name="[6e]"></a>SystemInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, system_msp432e401y.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432e401y_uvision.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>UART_Init</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, uart.o(.text.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>UART_OutChar</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, uart.o(.text.UART_OutChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_OutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_printf
</UL>

<P><STRONG><a name="[d0]"></a>UART_printf</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, uart.o(.text.UART_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_printf &rArr; UART_OutChar
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_OutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Check
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[d3]"></a>VL53L1X_BootState</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, vl53l1x_api.o(.text.VL53L1X_BootState))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = VL53L1X_BootState &rArr; VL53L1_RdByte &rArr; readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>VL53L1X_CheckForDataReady</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, vl53l1x_api.o(.text.VL53L1X_CheckForDataReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = VL53L1X_CheckForDataReady &rArr; VL53L1X_GetInterruptPolarity &rArr; VL53L1_RdByte &rArr; readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetInterruptPolarity
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[d7]"></a>VL53L1X_ClearInterrupt</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, vl53l1x_api.o(.text.VL53L1X_ClearInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = VL53L1X_ClearInterrupt &rArr; VL53L1_WrByte &rArr; writeI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WrByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[d9]"></a>VL53L1X_GetDistance</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, vl53l1x_api.o(.text.VL53L1X_GetDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = VL53L1X_GetDistance &rArr; VL53L1_RdWord &rArr; readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>VL53L1X_GetInterruptPolarity</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, vl53l1x_api.o(.text.VL53L1X_GetInterruptPolarity))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = VL53L1X_GetInterruptPolarity &rArr; VL53L1_RdByte &rArr; readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_CheckForDataReady
</UL>

<P><STRONG><a name="[db]"></a>VL53L1X_GetSensorId</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, vl53l1x_api.o(.text.VL53L1X_GetSensorId))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = VL53L1X_GetSensorId &rArr; VL53L1_RdWord &rArr; readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc]"></a>VL53L1X_SensorInit</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, vl53l1x_api.o(.text.VL53L1X_SensorInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = VL53L1X_SensorInit &rArr; Status_Check &rArr; sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_StopRanging
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_printf
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_CheckForDataReady
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_StartRanging
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Check
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_ClearInterrupt
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WrByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>VL53L1X_StartRanging</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, vl53l1x_api.o(.text.VL53L1X_StartRanging))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = VL53L1X_StartRanging &rArr; VL53L1_WrByte &rArr; writeI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WrByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[de]"></a>VL53L1X_StopRanging</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, vl53l1x_api.o(.text.VL53L1X_StopRanging))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = VL53L1X_StopRanging &rArr; VL53L1_WrByte &rArr; writeI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WrByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[d4]"></a>VL53L1_RdByte</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, vl53l1_platform_2dx4.o(.text.VL53L1_RdByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = VL53L1_RdByte &rArr; readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginRxI2C
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginTxI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_BootState
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetInterruptPolarity
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_CheckForDataReady
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[da]"></a>VL53L1_RdWord</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, vl53l1_platform_2dx4.o(.text.VL53L1_RdWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = VL53L1_RdWord &rArr; readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readI2C
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginRxI2C
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginTxI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetDistance
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetSensorId
</UL>

<P><STRONG><a name="[e3]"></a>VL53L1_WaitMs</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, vl53l1_platform_2dx4.o(.text.VL53L1_WaitMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = VL53L1_WaitMs &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>VL53L1_WrByte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, vl53l1_platform_2dx4.o(.text.VL53L1_WrByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = VL53L1_WrByte &rArr; writeI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeI2C
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeRegisterIndex_nostop
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginTxI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_StopRanging
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_StartRanging
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_ClearInterrupt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
</UL>

<P><STRONG><a name="[e1]"></a>beginRxI2C</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, vl53l1_platform_2dx4.o(.text.beginRxI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = beginRxI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
</UL>

<P><STRONG><a name="[df]"></a>beginTxI2C</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, vl53l1_platform_2dx4.o(.text.beginTxI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = beginTxI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WrByte
</UL>

<P><STRONG><a name="[a6]"></a>main</STRONG> (Thumb, 1004 bytes, Stack size 144 bytes, 2dx_studio_8c.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = main &rArr; VL53L1X_SensorInit &rArr; Status_Check &rArr; sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spin_ccw
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spin
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortH_Init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PortM_Init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onboardLEDs_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashAllLEDs
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLED4
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLED3
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetDistance
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_GetSensorId
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_BootState
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_StopRanging
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_printf
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_CheckForDataReady
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_StartRanging
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_Check
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_ClearInterrupt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1X_SensorInit
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WaitMs
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait10ms
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PLL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[e8]"></a>onboardLEDs_Init</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, onboardleds.o(.text.onboardLEDs_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = onboardLEDs_Init &rArr; FlashAllLEDs &rArr; SysTick_Wait10ms &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashAllLEDs
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>readI2C</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, vl53l1_platform_2dx4.o(.text.readI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = readI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CRx
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CError
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
</UL>

<P><STRONG><a name="[ed]"></a>spin</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, 2dx_studio_8c.o(.text.spin))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spin &rArr; SysTick_Wait10ms &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ee]"></a>spin_ccw</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, 2dx_studio_8c.o(.text.spin_ccw))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spin_ccw &rArr; SysTick_Wait10ms &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>writeI2C</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, vl53l1_platform_2dx4.o(.text.writeI2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = writeI2C &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CError
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CTx
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WrByte
</UL>

<P><STRONG><a name="[e0]"></a>writeRegisterIndex</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, vl53l1_platform_2dx4.o(.text.writeRegisterIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = writeRegisterIndex &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CError
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CTx
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdWord
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_RdByte
</UL>

<P><STRONG><a name="[e4]"></a>writeRegisterIndex_nostop</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, vl53l1_platform_2dx4.o(.text.writeRegisterIndex_nostop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = writeRegisterIndex_nostop &rArr; SysTick_Wait
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CError
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashI2CTx
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VL53L1_WrByte
</UL>

<P><STRONG><a name="[be]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[f3]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[f2]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[f4]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[f5]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[bf]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[c0]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[f6]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[c2]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[ba]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[a0]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[72]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[126]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[127]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[7d]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[81]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[71]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
